faceChecking.py

목적 = 얼굴 탐지 및 인식
	탐지와 인식에 각각 다른 모델이 활용됨

함수
preprocess() = 이미지를 채널 너비 높이 순으로 변환
cosine_similarity() = 두 벡터(얼굴)의 유사성 반환
detect_faces() = 얼굴 검출용 함수 (입력받은 얼굴을 모델에 입력, 확률 계산 후 박스 좌표 생성)
faceCheckings() = main 함수. 이미지 전처리 + 위의 함수들 호출 + 사진과 영상 비교



흐름
1. 데이터베이스에 등록된 직원 사진 분석
	(1) 명암 대비 향상 (CLAHE 알고리즘)
	(2) 사진에서 얼굴 검출 = detect_faces()
	(3) 얼굴의 특징 분석, 벡터로 반환 (reference_embeddings)
2. 실시간 영상과 비교
	(1) 영상 전처리 = preprocess() + 기타
	(2) 영상에서 얼굴 검출 = detect_faces()
	(3) 얼굴의 특징 분석, 벡터로 반환 (embeddings)
	(4) 기준 벡터와 벡터 비교 = cosine_similarity()
	(5) 비교 결과가 일정 값 이상이면 동일인으로 간주



과제
1. 다양한 얼굴 각도 지원 = 더 나은 모델
    지원이 불가하면 인식 오류가 굉장할 것
2. 출구용 카메라는 들어온 사람만 인식
     메모리가 부족하면 반드시 구현
